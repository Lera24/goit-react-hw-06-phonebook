{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts-type.js","components/ContactList/ContactList.js","redux/contacts-action.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","redux/store.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ADD","REMOVE","FILTER","connect","state","contacts","filter","items","normalizeFilter","toLowerCase","name","includes","dispatch","onDeleteContact","type","payload","actions","map","contact","className","css","item","number","button","onClick","id","onAddContact","shortid","generate","useState","setName","setNumber","inputNameId","inputTelId","findCurrentValue","e","target","value","onSubmit","preventDefault","find","alert","wrap","htmlFor","input","onChange","pattern","title","required","onFilter","inputFilterId","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","contactsReducer","combineReducers","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3906acd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2r30Q\"};","export const ADD = \"items/Add\";\nexport const REMOVE = \"items/Remove\";\nexport const FILTER = \"items/Filter\";\n","import PropTypes from \"prop-types\";\nimport * as actions from \"../../redux/contacts-action\";\nimport { connect } from \"react-redux\";\nimport css from \"./ContactList.module.css\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map((contact) => {\n        return (\n          <li key={contact.id} className={css.item}>\n            <span className={css.name}>{`${contact.name}:`}</span>\n            <span className={css.number}>{contact.number}</span>\n            <button\n              type=\"submit\"\n              className={css.button}\n              onClick={() => onDeleteContact(contact.name)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const { filter, items } = state.contacts;\n  const normalizeFilter = filter.toLowerCase();\n  const filterCurrentTel = items.filter(({ name }) =>\n    name.toLowerCase().includes(normalizeFilter)\n  );\n\n  return {\n    contacts: filterCurrentTel,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDeleteContact: (name) => dispatch(actions.removeItem(name)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n","import { ADD, REMOVE, FILTER } from \"./contacts-type\";\nimport shortid from \"shortid\";\n\nexport const addItem = (name, number) => ({\n  type: ADD,\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n});\n\nexport const removeItem = (name) => ({\n  type: REMOVE,\n  payload: name,\n});\n\nexport const filterItem = (value) => ({\n  type: FILTER,\n  payload: value,\n});\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport css from \"./ContactForm.module.css\";\nimport * as actions from \"../../redux/contacts-action\";\nimport { connect } from \"react-redux\";\n\nfunction ContactForm({ contacts, onAddContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const inputNameId = shortid.generate();\n  const inputTelId = shortid.generate();\n\n  const findCurrentValue = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const addContact = (e) => {\n    e.preventDefault();\n    contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts`)\n      : onAddContact(name, number);\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={addContact} className={css.wrap}>\n      <label htmlFor={inputNameId}>\n        Name\n        <input\n          className={css.input}\n          onChange={findCurrentValue}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          id={inputNameId}\n        />\n      </label>\n      <label htmlFor={inputTelId}>\n        Number\n        <input\n          className={css.input}\n          onChange={findCurrentValue}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          id={inputTelId}\n        />\n      </label>\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts.items,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddContact: (name, number) => dispatch(actions.addItem(name, number)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n  onAddContact: PropTypes.func,\n};\n","import shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/contacts-action\";\n\nfunction Filter({ filter, onFilter }) {\n  const inputFilterId = shortid.generate();\n\n  return (\n    <label htmlFor={inputFilterId}>\n      Find contacts by name\n      <input\n        className={css.input}\n        onChange={onFilter}\n        type=\"text\"\n        value={filter}\n        id={inputFilterId}\n      />\n    </label>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFilter: (e) => dispatch(actions.filterItem(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n","import ContactList from \"./components/ContactList/ContactList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"wrap\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from \"redux\";\nimport { ADD, REMOVE, FILTER } from \"./contacts-type\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst reducerItems = (state = [], { type, payload }) => {\n  switch (type) {\n    case ADD:\n      return [payload, ...state];\n    case REMOVE:\n      return state.filter((contact) => contact.name !== payload);\n    default:\n      return state;\n  }\n};\n\nconst reducerFilter = (state = \"\", { type, payload }) => {\n  switch (type) {\n    case FILTER:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nconst contactsReducer = combineReducers({\n  items: reducerItems,\n  filter: reducerFilter,\n});\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2sMbi\",\"name\":\"ContactList_name__3GRis\",\"button\":\"ContactList_button__3uj-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ContactForm_wrap__3rKJW\",\"input\":\"ContactForm_input__IOtZ3\",\"button\":\"ContactForm_button__13nzu\"};"],"sourceRoot":""}